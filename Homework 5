
class Book {
    constructor(task) {
      this.task = task;
      
    
    }
  }
  
  class UserInterface {
    constructor() {
      this.taskInput = document.getElementById('task-input');
      this.form = document.getElementById('form');
      this.tableBody = document.getElementById('table-body');
  
      this.books = [];
    }
  
    bindEventListeners() {
      this.form.addEventListener('submit', (e) => this.onFromSubmit(e));
    }
  
    onFromSubmit(event) {
      event.preventDefault();
  
      const book = new Book(
        this.taskInput.value,
      );
  
      this.books.push(book);
      this.populateBooksTable();
  
      this.taskInput.value = '';
    }
  
    populateBooksTable() {
  
      this.tableBody.innerHTML = '';
  
      for (const book of this.books) {
        const row = document.createElement('tr');
  
        const taskCell = document.createElement('td');
        const actionsCell = document.createElement('td');
  
        const removeButton = document.createElement('button');
  
  
        taskCell.innerHTML = book.title;
        removeButton.innerHTML = 'X';
  
        removeButton.addEventListener('click', (e) => this.onRemoveButtonClick(book));
        actionsCell.append(removeButton);
  
        row.append(taskCell);
        row.append(actionsCell);
        this.tableBody.append(row);
      }
  
    }
  
    onRemoveButtonClick(bookToRemove) {
      this.books = this.books.filter((book) => {
        return book.isbn !== bookToRemove.isbn;
      });
      this.populateBooksTable();
    }
  }
  
  const ui = new UserInterface();
  ui.bindEventListeners();
